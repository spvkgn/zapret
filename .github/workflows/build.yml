name: build

on:
  workflow_dispatch:
  push:
  #   branches: [master]
  #   paths:
  #     - 'ip2net/**'
  #     - 'mdig/**'
  #     - 'nfq/**'
  #     - 'tpws/**'

jobs:
  build:
    name: ${{ matrix.arch }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - arch: arm
            target: 'bcm27xx/bcm2708'
          - arch: arm64
            target: 'armsr/armv8'
          - arch: mips
            target: 'ath79/generic'
          - arch: mipsel
            target: 'ramips/mt7621'
          - arch: mips64
            target: 'octeon/generic'
          - arch: ppc64
            target: 'apm821xx/nand'
          - arch: riscv64
            target: 'sifiveu/generic'
          - arch: x86
            target: 'x86/generic'
          - arch: x86-64
            target: 'x86/64'
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: master
          path: zapret

      - name: Set up build tools
        env:
          TARGET: ${{ matrix.target }}
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # sudo apt update -qq && sudo apt install -y libbsd-dev libcap-dev
          BASE_URL=https://downloads.openwrt.org/releases
          VERSION=$(gh api repos/openwrt/openwrt/releases/latest --jq '.tag_name' | sed 's/^v//')
          mkdir -p $HOME/openwrt/staging_dir
          TOOLCHAIN=$(wget -qO- $BASE_URL/$VERSION/targets/$TARGET | grep -Po 'href="\Kopenwrt-toolchain.+?(?=")')
          wget $BASE_URL/$VERSION/targets/$TARGET/$TOOLCHAIN $BASE_URL/$VERSION/targets/$TARGET/sha256sums
          grep 'openwrt-toolchain' sha256sums | sha256sum -c - && tar -C $HOME/openwrt -xf $TOOLCHAIN
          find $HOME/openwrt -maxdepth 3 -path '*/openwrt-*/bin' -type d >> $GITHUB_PATH

      - name: Build
        id: build
        env:
          ARCH: ${{ matrix.arch }}
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          TARGET=$(find $HOME/openwrt -type f -name 'info.mk' -exec grep -Po 'TARGET_CROSS=\K.*' {} \;)
          DEPS_DIR=$GITHUB_WORKSPACE/deps
          export CC=${TARGET}gcc
          export LD=${TARGET}ld
          export AR=${TARGET}ar
          export NM=${TARGET}nm
          export STRIP=${TARGET}strip
          export STAGING_DIR=$HOME/openwrt/staging_dir
          export PKG_CONFIG_PATH=$DEPS_DIR/lib/pkgconfig

          # netfilter libs
          git clone --depth 1 -b libmnl-1.0.5 git://git.netfilter.org/libmnl
          git clone --depth 1 -b libnfnetlink-1.0.2 git://git.netfilter.org/libnfnetlink
          git clone --depth 1 -b libnetfilter_queue-1.0.5 git://git.netfilter.org/libnetfilter_queue

          for i in libmnl libnfnetlink libnetfilter_queue ; do
            (
              cd $i
              ./autogen.sh && \
              ./configure --prefix= --host=${TARGET%-} --enable-static --disable-shared && \
              make install -j$(nproc) DESTDIR=$DEPS_DIR
            )
            sed -i "s|^prefix=.*|prefix=$DEPS_DIR|g" $DEPS_DIR/lib/pkgconfig/$i.pc
          done

          # zlib
          gh api repos/madler/zlib/releases/latest --jq '.tag_name' |\
            xargs -I{} wget -qO- https://github.com/madler/zlib/archive/refs/tags/{}.tar.gz | tar -xz
          (
            cd zlib-*
            CFLAGS="-Os $CFLAGS" ./configure --prefix= --static && \
            make install -j$(nproc) DESTDIR=$DEPS_DIR
          )

          # headers
          wget https://git.alpinelinux.org/aports/plain/main/bsd-compat-headers/queue.h && \
          wget https://git.kernel.org/pub/scm/libs/libcap/libcap.git/plain/libcap/include/sys/capability.h && \
          install -Dm644 -t $DEPS_DIR/include/sys queue.h capability.h

          # build zapret
          for i in ip2net mdig nfq tpws ; do
            CFLAGS="-Os -static-libgcc -static -I$DEPS_DIR/include $CFLAGS" \
            LDFLAGS="-Os -L$DEPS_DIR/lib $LDFLAGS" \
            make -C zapret/$i -j$(nproc)
          done
          SHA_SHORT=$(gh api repos/${{ github.repository }}/commits/master --jq '.sha[:7]')
          tar -C zapret -cJf zapret-$SHA_SHORT-$ARCH.tar.xz --transform 's|.*/||' ip2net/ip2net mdig/mdig nfq/nfqws tpws/tpws

      - name: Upload artifacts
        if: steps.build.outcome == 'success'
        uses: actions/upload-artifact@v4
        with:
          name: zapret-owrt-${{ matrix.arch }}
          path: ./**/zapret-*.tar.xz

  release:
    needs: build
    permissions:
      contents: write
    env:
      tag_name: openwrt
    runs-on: ubuntu-latest
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4

      - name: GH
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release delete ${{ env.tag_name }} --cleanup-tag -y -R ${{ github.repository }} || true
          echo "DATE=$(gh api repos/${{ github.repository }}/commits/master --jq '.commit.committer.date' | date -f - +%Y%m%d)" >> $GITHUB_ENV

      - name: Upload release assets
        uses: softprops/action-gh-release@v2
        with:
          fail_on_unmatched_files: true
          prerelease: true
          draft: false
          tag_name: ${{ env.tag_name }}
          name: ${{ env.DATE }}
          target_commitish : master
          files: |
            ./**/zapret-*.tar.xz
