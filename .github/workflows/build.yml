name: build

on:
  workflow_dispatch:
  push:
    # tags:
    #   - v[0-9]+*
    # branches:
    #   - master
    # paths:
    #   - 'ip2net/**'
    #   - 'mdig/**'
    #   - 'nfq/**'
    #   - 'tpws/**'

jobs:
  build-linux:
    name: Linux ${{ matrix.arch }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - arch: arm64
            tool: aarch64-unknown-linux-musl
          - arch: arm
            tool: arm-unknown-linux-musleabi
          - arch: armhf
            tool: arm-unknown-linux-musleabihf
          - arch: armv7
            tool: armv7-unknown-linux-musleabi
          - arch: armv7hf
            tool: armv7-unknown-linux-musleabihf
          - arch: mips64el
            tool: mips64el-unknown-linux-musl
          - arch: mips64
            tool: mips64-unknown-linux-musl
          - arch: mipsel
            tool: mipsel-unknown-linux-musl
          - arch: mipselsf
            tool: mipsel-unknown-linux-muslsf
          - arch: mips
            tool: mips-unknown-linux-musl
          - arch: mipssf
            tool: mips-unknown-linux-muslsf
          - arch: ppc64
            tool: powerpc64-unknown-linux-musl
          - arch: ppc
            tool: powerpc-unknown-linux-musl
          - arch: x86
            tool: i586-unknown-linux-musl
          - arch: x86_64
            tool: x86_64-unknown-linux-musl
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: master
          path: zapret

      - name: Set up build tools
        env:
          REPO: 'spvkgn/musl-cross'
          TOOL: ${{ matrix.tool }}
        run: |
          sudo apt update -qq && sudo apt install -y libcap-dev
          mkdir -p $HOME/tools
          wget -qO- https://github.com/$REPO/releases/download/latest/$TOOL.tar.xz | tar -C $HOME/tools -xJ || exit 1
          [ -d "$HOME/tools/$TOOL/bin" ] && echo "$HOME/tools/$TOOL/bin" >> $GITHUB_PATH

      - name: Build
        env:
          ARCH: ${{ matrix.arch }}
          TARGET: ${{ matrix.tool }}
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          DEPS_DIR=$GITHUB_WORKSPACE/deps
          export CC="$TARGET-gcc"
          export LD=$TARGET-ld
          export AR=$TARGET-ar
          export NM=$TARGET-nm
          export STRIP=$TARGET-strip
          export PKG_CONFIG_PATH=$DEPS_DIR/lib/pkgconfig
          export CFLAGS="-Os -flto=auto"
          export LDFLAGS="-Os"

          # netfilter libs
          git clone --depth 1 -b libmnl-1.0.5 git://git.netfilter.org/libmnl
          git clone --depth 1 -b libnfnetlink-1.0.2 git://git.netfilter.org/libnfnetlink
          git clone --depth 1 -b libnetfilter_queue-1.0.5 git://git.netfilter.org/libnetfilter_queue

          for i in libmnl libnfnetlink libnetfilter_queue ; do
            (
              cd $i
              ./autogen.sh && \
              ./configure --prefix= --host=$TARGET --enable-static --disable-shared && \
              make install -j$(nproc) DESTDIR=$DEPS_DIR
            )
            sed -i "s|^prefix=.*|prefix=$DEPS_DIR|g" $DEPS_DIR/lib/pkgconfig/$i.pc
          done

          # zlib
          gh api repos/madler/zlib/releases/latest --jq '.tag_name' |\
            xargs -I{} wget -qO- https://github.com/madler/zlib/archive/refs/tags/{}.tar.gz | tar -xz
          (
            cd zlib-*
            ./configure --prefix= --static && \
            make install -j$(nproc) DESTDIR=$DEPS_DIR
          )

          # headers
          # wget https://git.alpinelinux.org/aports/plain/main/bsd-compat-headers/queue.h && \
          # wget https://git.kernel.org/pub/scm/libs/libcap/libcap.git/plain/libcap/include/sys/capability.h && \
          install -Dm644 -t $DEPS_DIR/include/sys /usr/include/x86_64-linux-gnu/sys/queue.h /usr/include/sys/capability.h

          # zapret
          CFLAGS="$CFLAGS -static-libgcc -static -I$DEPS_DIR/include" \
          LDFLAGS="$LDFLAGS -L$DEPS_DIR/lib" \
          make -C zapret -j$(nproc)
          tar -C zapret/binaries/my -cJf zapret-linux-$ARCH.tar.xz .

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: zapret-linux-${{ matrix.arch }}
          path: zapret-*.tar.xz
          if-no-files-found: error
