name: build

on:
  workflow_dispatch:
  push:
    # branches: [master]
    # paths:
    #   - 'ip2net/**'
    #   - 'mdig/**'
    #   - 'nfq/**'
    #   - 'tpws/**'

jobs:
  build-linux:
    name: Linux ${{ matrix.arch }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - arch: x86
            target: 'x86/geode'
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: master
          path: zapret

      - name: Set up build tools
        env:
          TARGET: ${{ matrix.target }}
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          sudo apt update -qq && sudo apt install -y libcap-dev
          URL=https://downloads.openwrt.org/releases
          VERSION=$(gh api repos/openwrt/openwrt/releases/latest --jq '.tag_name' | sed 's/^v//')
          mkdir -p $HOME/openwrt/staging_dir
          TOOLCHAIN=$(wget -qO- $URL/$VERSION/targets/$TARGET | grep -Po 'href="\Kopenwrt-toolchain.+?(?=")')
          wget $URL/$VERSION/targets/$TARGET/$TOOLCHAIN $URL/$VERSION/targets/$TARGET/sha256sums
          grep 'openwrt-toolchain' sha256sums | sha256sum -c - && tar -C $HOME/openwrt -xf $TOOLCHAIN
          find $HOME/openwrt -maxdepth 3 -path '*/openwrt-*/bin' -type d >> $GITHUB_PATH

      - name: Build
        id: build
        env:
          ARCH: ${{ matrix.arch }}
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          TARGET=$(find $HOME/openwrt -type f -name 'info.mk' -exec grep -Po 'TARGET_CROSS=\K.*' {} \;)
          DEPS_DIR=$GITHUB_WORKSPACE/deps
          export CC=${TARGET}gcc
          export LD=${TARGET}ld
          export AR=${TARGET}ar
          export NM=${TARGET}nm
          export STRIP=${TARGET}strip
          export STAGING_DIR=$HOME/openwrt/staging_dir
          export PKG_CONFIG_PATH=$DEPS_DIR/lib/pkgconfig

          # netfilter libs
          git clone --depth 1 -b libmnl-1.0.5 git://git.netfilter.org/libmnl
          git clone --depth 1 -b libnfnetlink-1.0.2 git://git.netfilter.org/libnfnetlink
          git clone --depth 1 -b libnetfilter_queue-1.0.5 git://git.netfilter.org/libnetfilter_queue

          for i in libmnl libnfnetlink libnetfilter_queue ; do
            (
              cd $i
              ./autogen.sh && \
              ./configure --prefix= --host=${TARGET%-} --enable-static --disable-shared && \
              make install -j$(nproc) DESTDIR=$DEPS_DIR
            )
            sed -i "s|^prefix=.*|prefix=$DEPS_DIR|g" $DEPS_DIR/lib/pkgconfig/$i.pc
          done

          # zlib
          gh api repos/madler/zlib/releases/latest --jq '.tag_name' |\
            xargs -I{} wget -qO- https://github.com/madler/zlib/archive/refs/tags/{}.tar.gz | tar -xz
          (
            cd zlib-*
            CFLAGS="-Os $CFLAGS" ./configure --prefix= --static && \
            make install -j$(nproc) DESTDIR=$DEPS_DIR
          )

          # headers
          # wget https://git.alpinelinux.org/aports/plain/main/bsd-compat-headers/queue.h && \
          # wget https://git.kernel.org/pub/scm/libs/libcap/libcap.git/plain/libcap/include/sys/capability.h && \
          install -Dm644 -t $DEPS_DIR/include/sys /usr/include/x86_64-linux-gnu/sys/queue.h /usr/include/sys/capability.h

          # zapret
          CFLAGS="-Os -static-libgcc -static -I$DEPS_DIR/include $CFLAGS" \
          LDFLAGS="-Os -L$DEPS_DIR/lib $LDFLAGS" \
          make -C zapret -j$(nproc)

          tar -C zapret/binaries/my -cJf zapret-linux-$ARCH.tar.xz .

      - name: Upload artifacts
        if: steps.build.outcome == 'success'
        uses: actions/upload-artifact@v4
        with:
          name: zapret-linux-${{ matrix.arch }}
          path: zapret-*.tar.xz
          if-no-files-found: error
