name: build

on:
  workflow_dispatch:
  push:
    branches: [master]
    paths:
      - 'ip2net/**'
      - 'mdig/**'
      - 'nfq/**'
      - 'tpws/**'

jobs:
  build:
    name: ${{ matrix.arch }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - arch: arm64
            tool: aarch64-unknown-linux-musl
          - arch: arm
            tool: arm-unknown-linux-musleabi
          - arch: armhf
            tool: arm-unknown-linux-musleabihf
          - arch: armv7
            tool: armv7-unknown-linux-musleabi
          - arch: armv7hf
            tool: armv7-unknown-linux-musleabihf
          - arch: mips64el
            tool: mips64el-unknown-linux-musl
          - arch: mips64
            tool: mips64-unknown-linux-musl
          - arch: mipsel
            tool: mipsel-unknown-linux-musl
          - arch: mipselsf
            tool: mipsel-unknown-linux-muslsf
          - arch: mips
            tool: mips-unknown-linux-musl
          - arch: mipssf
            tool: mips-unknown-linux-muslsf
          - arch: powerpc64
            tool: powerpc64-unknown-linux-musl
          - arch: powerpc
            tool: powerpc-unknown-linux-musl
          - arch: x86
            tool: x86_64-multilib-linux-musl
            env:
              CFLAGS: '-m32'
              LDFLAGS: '-m32'
          - arch: x86-64
            tool: x86_64-multilib-linux-musl
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: master
          path: zapret

      - name: Set up build tools
        env:
          REPO: 'spvkgn/musl-cross'
          TOOL: ${{ matrix.tool }}
        run: |
          mkdir -p $HOME/tools
          wget -qO- https://github.com/$REPO/releases/download/latest/$TOOL.tar.xz | tar -C $HOME/tools -xJ || exit 1
          [ -d "$HOME/tools/$TOOL/bin" ] && echo "$HOME/tools/$TOOL/bin" >> $GITHUB_PATH

      - name: Build [${{ matrix.arch }}]
        id: build
        env:
          ARCH: ${{ matrix.arch }}
          TOOL: ${{ matrix.tool }}
          CFLAGS: ${{ matrix.env.CFLAGS }}
          LDFLAGS: ${{ matrix.env.LDFLAGS }}
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          export CC="$TOOL-gcc"
          export LD=$TOOL-ld
          export AR=$TOOL-ar
          export NM=$TOOL-nm
          export STRIP=$TOOL-strip

          DEPS_DIR=$GITHUB_WORKSPACE/deps
          COMMIT_SHA=$(gh api repos/${{ github.repository }}/commits/master --jq '.sha[:7]')

          # libnfnetlink
          git clone --depth 1 -b libnfnetlink-1.0.2 git://git.netfilter.org/libnfnetlink
          (
            cd libnfnetlink
            ./autogen.sh && \
            ./configure --prefix= --host=$TOOL --enable-static --disable-shared && \
            make install -j$(nproc) DESTDIR=$DEPS_DIR
          )

          # libmnl
          git clone --depth 1 -b libmnl-1.0.5 git://git.netfilter.org/libmnl
          (
            cd libmnl
            ./autogen.sh && \
            ./configure --prefix= --host=$TOOL --enable-static --disable-shared && \
            make install -j$(nproc) DESTDIR=$DEPS_DIR
          )

          # libnetfilter_queue
          git clone --depth 1 -b libnetfilter_queue-1.0.5 git://git.netfilter.org/libnetfilter_queue
          (
            cd libnetfilter_queue
            ./autogen.sh && \
            LIBNFNETLINK_CFLAGS=-I$DEPS_DIR/include LIBNFNETLINK_LIBS=-L$DEPS_DIR/lib \
            LIBMNL_CFLAGS=-I$DEPS_DIR/include LIBMNL_LIBS=-L$DEPS_DIR/lib \
            ./configure --prefix= --host=$TOOL --enable-static --disable-shared && \
            make install -j$(nproc) DESTDIR=$DEPS_DIR
          )

          # zlib
          gh api repos/madler/zlib/releases/latest --jq '.tag_name' |\
            xargs -I{} wget -qO- https://github.com/madler/zlib/archive/refs/tags/{}.tar.gz | tar -xz
          (
            cd zlib-*
            CFLAGS="-Os $CFLAGS" ./configure --prefix= --static && \
            make install -j$(nproc) DESTDIR=$DEPS_DIR
          )

          # headers
          wget https://git.alpinelinux.org/aports/plain/main/bsd-compat-headers/queue.h && \
          wget https://git.kernel.org/pub/scm/libs/libcap/libcap.git/plain/libcap/include/sys/capability.h && \
          install -Dm644 -t $DEPS_DIR/include/sys queue.h capability.h

          # build zapret
          for i in ip2net mdig nfq tpws ; do
            CFLAGS="-Os -static-libgcc -static -I$DEPS_DIR/include $CFLAGS" \
            LDFLAGS="-Os -L$DEPS_DIR/lib $LDFLAGS" \
            make -C zapret/$i -j$(nproc)
          done
          tar -C zapret -cJf zapret-$COMMIT_SHA-$ARCH.tar.xz ip2net/ip2net mdig/mdig nfq/nfqws tpws/tpws

      - name: Upload artifacts
        if: steps.build.outcome == 'success'
        uses: actions/upload-artifact@v4
        with:
          name: zapret-${{ matrix.arch }}
          path: ./**/zapret-*.tar.xz

  release:
    needs: build
    permissions:
      contents: write
    env:
      tag_name: latest
    runs-on: ubuntu-latest
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4

      - name: GH
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release delete ${{ env.tag_name }} --cleanup-tag -y -R ${{ github.repository }} || true
          echo "DATE=$(gh api repos/${{ github.repository }}/commits/master --jq '.commit.committer.date' | date -f - +%Y%m%d)" >> $GITHUB_ENV

      - name: Upload release assets
        uses: softprops/action-gh-release@v2
        with:
          fail_on_unmatched_files: true
          prerelease: false
          draft: false
          tag_name: ${{ env.tag_name }}
          name: ${{ env.DATE }}
          target_commitish : master
          files: |
            ./**/zapret-*.tar.xz
